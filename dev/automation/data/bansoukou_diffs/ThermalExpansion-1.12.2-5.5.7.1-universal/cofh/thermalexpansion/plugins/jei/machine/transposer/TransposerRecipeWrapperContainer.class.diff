@@ -9,9 +9,6 @@
  *  mezz.jei.api.gui.IDrawableAnimated$StartDirection
  *  mezz.jei.api.gui.IDrawableStatic
  *  net.minecraft.item.ItemStack
- *  net.minecraftforge.fluids.Fluid
- *  net.minecraftforge.fluids.FluidRegistry
- *  net.minecraftforge.fluids.FluidStack
  *  net.minecraftforge.fluids.capability.CapabilityFluidHandler
  *  net.minecraftforge.fluids.capability.IFluidHandlerItem
  */
@@ -26,47 +23,18 @@ import mezz.jei.api.IGuiHelper;
 import mezz.jei.api.gui.IDrawableAnimated;
 import mezz.jei.api.gui.IDrawableStatic;
 import net.minecraft.item.ItemStack;
-import net.minecraftforge.fluids.Fluid;
-import net.minecraftforge.fluids.FluidRegistry;
-import net.minecraftforge.fluids.FluidStack;
 import net.minecraftforge.fluids.capability.CapabilityFluidHandler;
 import net.minecraftforge.fluids.capability.IFluidHandlerItem;
 
 public class TransposerRecipeWrapperContainer
 extends TransposerRecipeWrapper {
     public TransposerRecipeWrapperContainer(IGuiHelper guiHelper, ItemStack container, String uIdIn) {
-        IDrawableStatic progressDrawable;
-        IDrawableStatic fluidDrawable;
         this.uId = uIdIn;
-        ArrayList<ItemStack> recipeInputs = new ArrayList<ItemStack>();
-        ArrayList<ItemStack> recipeOutputs = new ArrayList<ItemStack>();
-        ArrayList<FluidStack> recipeFluids = new ArrayList<FluidStack>();
+        ArrayList recipeInputs = new ArrayList();
+        ArrayList recipeOutputs = new ArrayList();
+        ArrayList recipeFluids = new ArrayList();
         ItemStack inputStack = container.func_77946_l();
         IFluidHandlerItem handler = (IFluidHandlerItem)inputStack.getCapability(CapabilityFluidHandler.FLUID_HANDLER_ITEM_CAPABILITY, null);
-        if (this.uId.equals("thermalexpansion.transposer_fill")) {
-            for (Fluid fluid : FluidRegistry.getRegisteredFluids().values()) {
-                int fill = handler.fill(new FluidStack(fluid, 1000), true);
-                if (fill <= 0) continue;
-                FluidStack filledFluid = new FluidStack(fluid, fill);
-                ItemStack outputStack = handler.getContainer().func_77946_l();
-                recipeInputs.add(container);
-                recipeOutputs.add(outputStack);
-                recipeFluids.add(filledFluid);
-                handler.drain(1000, true);
-            }
-        } else {
-            for (Fluid fluid : FluidRegistry.getRegisteredFluids().values()) {
-                int fill = handler.fill(new FluidStack(fluid, 1000), true);
-                if (fill <= 0) continue;
-                inputStack = handler.getContainer().func_77946_l();
-                FluidStack drainedFluid = handler.drain(1000, true);
-                if (drainedFluid == null) continue;
-                ItemStack outputStack = handler.getContainer();
-                recipeInputs.add(inputStack);
-                recipeOutputs.add(outputStack);
-                recipeFluids.add(drainedFluid);
-            }
-        }
         this.inputs = Collections.singletonList(recipeInputs);
         this.outputs = Collections.singletonList(recipeOutputs);
         if (this.uId.equals("thermalexpansion.transposer_fill")) {
@@ -79,14 +47,14 @@ extends TransposerRecipeWrapper {
         this.energy = 400;
         if (this.uId.equals("thermalexpansion.transposer_fill")) {
             this.progressBack = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressLeft(2);
-            fluidDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressLeft(2);
-            progressDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressLeftFill(2);
+            IDrawableStatic fluidDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressLeft(2);
+            IDrawableStatic progressDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressLeftFill(2);
             this.fluid = guiHelper.createAnimatedDrawable(fluidDrawable, this.energy / TileTransposer.basePower, IDrawableAnimated.StartDirection.RIGHT, true);
             this.progress = guiHelper.createAnimatedDrawable(progressDrawable, this.energy / TileTransposer.basePower, IDrawableAnimated.StartDirection.RIGHT, false);
         } else {
             this.progressBack = Drawables.getDrawables((IGuiHelper)guiHelper).getProgress(2);
-            fluidDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgress(2);
-            progressDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressFill(2);
+            IDrawableStatic fluidDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgress(2);
+            IDrawableStatic progressDrawable = Drawables.getDrawables((IGuiHelper)guiHelper).getProgressFill(2);
             this.fluid = guiHelper.createAnimatedDrawable(fluidDrawable, this.energy / TileTransposer.basePower, IDrawableAnimated.StartDirection.LEFT, true);
             this.progress = guiHelper.createAnimatedDrawable(progressDrawable, this.energy / TileTransposer.basePower, IDrawableAnimated.StartDirection.LEFT, false);
         }