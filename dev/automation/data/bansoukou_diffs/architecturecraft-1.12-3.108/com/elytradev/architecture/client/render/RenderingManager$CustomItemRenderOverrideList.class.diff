@@ -6,12 +6,10 @@
  *  com.elytradev.architecture.client.render.RenderingManager
  *  com.elytradev.architecture.client.render.target.RenderTargetBaked
  *  com.elytradev.architecture.client.render.target.RenderTargetBase
- *  com.elytradev.architecture.common.ArchitectureLog
  *  com.elytradev.architecture.common.item.ItemArchitecture
  *  com.elytradev.architecture.common.render.ModelSpec
  *  com.google.common.collect.ImmutableList
  *  net.minecraft.block.Block
- *  net.minecraft.client.renderer.GlStateManager
  *  net.minecraft.client.renderer.block.model.IBakedModel
  *  net.minecraft.client.renderer.block.model.ItemOverrideList
  *  net.minecraft.entity.EntityLivingBase
@@ -25,13 +23,11 @@ import com.elytradev.architecture.client.render.ICustomRenderer;
 import com.elytradev.architecture.client.render.RenderingManager;
 import com.elytradev.architecture.client.render.target.RenderTargetBaked;
 import com.elytradev.architecture.client.render.target.RenderTargetBase;
-import com.elytradev.architecture.common.ArchitectureLog;
 import com.elytradev.architecture.common.item.ItemArchitecture;
 import com.elytradev.architecture.common.render.ModelSpec;
 import com.google.common.collect.ImmutableList;
 import java.util.List;
 import net.minecraft.block.Block;
-import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.block.model.IBakedModel;
 import net.minecraft.client.renderer.block.model.ItemOverrideList;
 import net.minecraft.entity.EntityLivingBase;
@@ -49,26 +45,19 @@ extends ItemOverrideList {
     }
 
     public IBakedModel handleItemState(IBakedModel originalModel, ItemStack stack, World world, EntityLivingBase entity) {
-        Block block;
-        ModelSpec spec;
+        Block spec;
         Item item = stack.func_77973_b();
         ICustomRenderer rend = (ICustomRenderer)RenderingManager.this.itemRenderers.get(item);
         if (rend == null && item instanceof ItemArchitecture && (spec = ((ItemArchitecture)item).getModelSpec(stack)) != null) {
-            rend = RenderingManager.this.getCustomRendererForSpec(1, spec);
+            rend = RenderingManager.this.getCustomRendererForSpec(1, (ModelSpec)spec);
         }
-        if (rend == null && (block = Block.func_149634_a((Item)item)) != null) {
-            rend = RenderingManager.this.getCustomRendererForState(block.func_176223_P());
+        if (rend == null && (spec = Block.func_149634_a((Item)item)) != null) {
+            rend = RenderingManager.this.getCustomRendererForState(spec.func_176223_P());
         }
         if (rend != null) {
-            try {
-                GlStateManager.func_179103_j((int)7425);
-            }
-            catch (RuntimeException e) {
-                ArchitectureLog.warn((String)"Failed to enable smooth shading for item models, {}", (Object[])new Object[]{e.getMessage()});
-            }
-            RenderTargetBaked target = new RenderTargetBaked();
-            rend.renderItemStack(stack, (RenderTargetBase)target, RenderingManager.itemTrans);
-            return target.getBakedModel();
+            spec = new RenderTargetBaked();
+            rend.renderItemStack(stack, (RenderTargetBase)spec, RenderingManager.itemTrans);
+            return spec.getBakedModel();
         }
         return this.emptyModel;
     }