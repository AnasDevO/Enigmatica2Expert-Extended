# Configuration file

general {
    B:"Enable Advanced Rocketry Patch"=true

    # This patch is for CB Multipart (previously ForgeMultiPart) from covers1624, MrTJP and ChickenBones.
    # MCMultiPart is another different mod!
    B:"Enable CB Multipart Patch"=true
    B:"Enable Charset lib Patch"=true
    B:"Enable Code Chicken Lib Patch"=true
    B:"Enable Custom Main Menu Patch"=true
    B:"Enable Enchantment Control Patch"=true
    B:"Enable Ender Core Patch"=true

    # This gtceu patch is temporary. An official fix is pending.
    B:"Enable GregTechCE Unofficial Patch"=true

    # From author of Fugue: I hate this mod.
    B:"Enable HammerCore Patch"=true
    B:"Enable Logistics Pipes Patch"=true
    B:"Enable Patch For OpenFM/OpenDisks/OpenSecurity"=true
    B:"Enable Project Red Patch"=true
    B:"Enable Shoulder Surfing Reloaded Patch"=true
    B:"Enable Solar Flux Reborn Patch"=true
    B:"Enable Splash Animation Patch"=true
    B:"Enable TFC Medical Patch"=true
    B:"Enable TickCentral Patch"=true
    B:"Enable XaeroPlus Patch"=true

    # Mods like Apotheosis is casting AppClassLoader to URLClassLoader for getting its URLs.
    # This will crash in newer Java, because AppClassLoader is no longer a URLClassLoader.
    # Targets class here will be patched to new method we provide.
    S:"Get URL Patch Target List" <
        shadows.CustomClassWriter
        lumien.randomthings.asm.CustomClassWriter
        shadows.squeezer.CustomClassWriter
        com.elytradev.wings.asm.RemappingClassWriter
     >

    # ScriptEngine from javax has changed a lot in past Java versions.
    # Many old code will end up getting an null in newer Java.
    # Target classes here will be patched to use a helper method we provide.
    S:"New Script Engine Patch Target List" <
        tk.zeitheron.solarflux.api.SolarScriptEngine
        com.github.tartaricacid.touhoulittlemaid.proxy.CommonProxy
     >

    # Field.set() and Field.get() may throw exceptions in newer Java when trying to handle final fields.
    # The few options remain are Unsafe or JNI.
    # Classes in this list will be used as transform targets.
    # Any Field related reflection calls will be redirected to Unsafe, so it wouldn't crash anymore.
    S:"Reflection Patch Target List" <
        epicsquid.mysticallib.hax.Hax
        vazkii.quark.world.feature.TreeVariants
        vazkii.quark.base.handler.OverrideRegistryHandler
        codechicken.lib.reflect.ReflectionManager
        com.tmtravlr.potioncore.PotionCoreEffects
        lumien.randomthings.recipes.ModRecipes
        net.malisis.core.renderer.font.MinecraftFont
     >

    # Java 8's UUID creation if flawed. It allow invalid UUIDs to be created.
    # This was fixed in later Java, but old mods still need a solution.
    # Target classes here will be patched to use a helper method we provide.
    S:"UUID Patch Target List" <
        com.Shultrea.Rin.Utility_Sector.HurtPatchHandler
     >

    # Non-Update was gone with Security Manager.
    # As a workaround, These targets will be banned from making connections with URL.openStream().
    # This may block more connection than update checks, so if anything gone wrong please open an issue.
    S:nonUpdateTargets <
        xxrexraptorxx.customizeddungeonloot.util.UpdateChecker$1
        com.nekokittygames.mffs.common.Versioninfo
        me.ichun.mods.ichunutil.common.thread.ThreadGetResources
        com.buuz135.industrial.proxy.CommonProxy
     >

    # Foundation comes with some ABI changes.
    # If you got a crash says some methods/fields in LaunchClassLoader not found, that's the remapper you want.
    # As a workaround, These targets will be redirected to new API.
    S:remapLWTargets <
        zone.rong.loliasm.common.crashes.ModIdentifier
        zone.rong.loliasm.LoliReflector
        com.github.terminatornl.tickcentral.asm.Compatibility
        com.charles445.rltweaker.asm.RLTweakerASM
        com.cleanroommc.modularui.core.ModularUICore
     >

    # sun.reflect.Reflection has moved to jdk.internal, and most of its features have replacements.
    # As a workaround, These targets will be redirected to new dummy class.
    S:remapReflectionTargets <
        quaternary.botaniatweaks.modules.botania.config.BotaniaConfig
        quaternary.botaniatweaks.modules.shared.lib.GeneratingFlowers
        quaternary.botaniatweaks.modules.shared.lib.NiceTryMap
        quaternary.botaniatweaks.modules.shared.lib.GeneratingFlowers$FlowerData
     >

    # Javax (Java EE) redirect targets.
    # They are gone in newer Java, so we are redirecting them to a replacement.
    S:remapTargets <
        com.ldtteam.structurize.util.StructureUtils
        git.jbredwards.fluidlogged_api.api.asm.IASMPlugin
     >

    ##########################################################################################################
    # finalremovingtargets
    #--------------------------------------------------------------------------------------------------------#
    # Target field's final modifier will be removed. No checks will be preformed before removal.
    # All fields with same name will be targeted.
    # Format: S:"foo.bar.classname"=field1|filed2
    ##########################################################################################################

    finalremovingtargets {
        S:net.minecraft.client.gui.GuiOptions=field_146441_g|field_146443_h
        S:net.minecraft.entity.EntityTracker=field_72793_b|field_72794_c|field_72795_a
        S:net.minecraft.entity.EntityTrackerEntry=field_73130_b|field_73132_a|field_187262_f|field_73131_c|field_73143_t
        S:net.minecraft.item.ItemBlock=field_150939_a
        S:net.minecraft.world.World=field_72996_f
        S:"net.minecraftforge.event.terraingen.BiomeEvent$BiomeColor"=originalColor
    }

}


